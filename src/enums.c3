module jolt;

const int MAX_PHYSICS_JOBS = 2048;
const int MAX_PHYSICS_BARRIERS = 8;
const float DEFAULT_COLLISION_TOLERANCE = 1.0e-4f;
const float DEFAULT_PENETRATION_TOLERANCE = 1.0e-4f;
const float DEFAULT_CONVEX_RADIUS = 0.05f;
const float CAPSULE_PROJECTION_SLOP = 0.02f;

enum ShapeType: char {
	SHAPE_TYPE_CONVEX,
	SHAPE_TYPE_COMPOUND,
	SHAPE_TYPE_DECORATED,
	SHAPE_TYPE_MESH,
	SHAPE_TYPE_HEIGHT_FIELD,
	SHAPE_TYPE_SOFTBODY,
	SHAPE_TYPE_USER1,
	SHAPE_TYPE_USER2,
	SHAPE_TYPE_USER3,
	SHAPE_TYPE_USER4,
}

enum ShapeSubType: char {
	SHAPE_SUB_TYPE_SPHERE,
	SHAPE_SUB_TYPE_BOX,
	SHAPE_SUB_TYPE_TRIANGLE,
	SHAPE_SUB_TYPE_CAPSULE,
	SHAPE_SUB_TYPE_TAPEREDCAPSULE,
	SHAPE_SUB_TYPE_CYLINDER,
	SHAPE_SUB_TYPE_CONVEX_HULL,
	SHAPE_SUB_TYPE_STATIC_COMPOUND,
	SHAPE_SUB_TYPE_MUTABLE_COMPOUND,
	SHAPE_SUB_TYPE_ROTATED_TRANSLATED,
	SHAPE_SUB_TYPE_SCALED,
	SHAPE_SUB_TYPE_OFFSET_CENTER_OF_MASS,
	SHAPE_SUB_TYPE_MESH,
	SHAPE_SUB_TYPE_HEIGHT_FIELD,
	SHAPE_SUB_TYPE_SOFT_BODY,
	SHAPE_SUB_TYPE_USER1,
	SHAPE_SUB_TYPE_USER2,
	SHAPE_SUB_TYPE_USER3,
	SHAPE_SUB_TYPE_USER4,
	SHAPE_SUB_TYPE_USER5,
	SHAPE_SUB_TYPE_USER6,
	SHAPE_SUB_TYPE_USER7,
	SHAPE_SUB_TYPE_USER8,
	SHAPE_SUB_TYPE_USER_CONVEX1,
	SHAPE_SUB_TYPE_USER_CONVEX2,
	SHAPE_SUB_TYPE_USER_CONVEX3,
	SHAPE_SUB_TYPE_USER_CONVEX4,
	SHAPE_SUB_TYPE_USER_CONVEX5,
	SHAPE_SUB_TYPE_USER_CONVEX6,
	SHAPE_SUB_TYPE_USER_CONVEX7,
	SHAPE_SUB_TYPE_USER_CONVEX8,
}

typedef PhysicsUpdateError = uint;
const PhysicsUpdateError PHYSICS_UPDATE_ERROR_NONE                     = 0;
const PhysicsUpdateError PHYSICS_UPDATE_ERROR_MANIFOLD_CACHE_FULL      = 1 << 0;
const PhysicsUpdateError PHYSICS_UPDATE_ERROR_BODY_PAIR_CACHE_FULL     = 1 << 1;
const PhysicsUpdateError PHYSICS_UPDATE_ERROR_CONTACT_CONSTRAINTS_FULL = 1 << 2;

enum ConstraintType: uint {
	CONSTRAINT_TYPE_CONSTRAINT,
	CONSTRAINT_TYPE_TWO_BODY_CONSTRAINT,
}

enum ConstraintSubType: uint {
	CONSTRAINT_SUB_TYPE_FIXED,
	CONSTRAINT_SUB_TYPE_POINT,
	CONSTRAINT_SUB_TYPE_HINGE,
	CONSTRAINT_SUB_TYPE_SLIDER,
	CONSTRAINT_SUB_TYPE_DISTANCE,
	CONSTRAINT_SUB_TYPE_CONE,
	CONSTRAINT_SUB_TYPE_SWING_TWIST,
	CONSTRAINT_SUB_TYPE_SIX_DOF,
	CONSTRAINT_SUB_TYPE_PATH,
	CONSTRAINT_SUB_TYPE_VEHICLE,
	CONSTRAINT_SUB_TYPE_RACK_AND_PINION,
	CONSTRAINT_SUB_TYPE_GEAR,
	CONSTRAINT_SUB_TYPE_PULLEY,
	CONSTRAINT_SUB_TYPE_USER1,
	CONSTRAINT_SUB_TYPE_USER2,
	CONSTRAINT_SUB_TYPE_USER3,
	CONSTRAINT_SUB_TYPE_USER4,
}

enum ConstraintSpace: uint {
	CONSTRAINT_SPACE_LOCAL_TO_BODY_COM,
	CONSTRAINT_SPACE_WORLD_SPACE,
}

enum MotionType: char {
	MOTION_TYPE_STATIC,
	MOTION_TYPE_KINEMATIC,
	MOTION_TYPE_DYNAMIC,
}

enum MotionQuality: char {
	MOTION_QUALITY_DISCRETE,
	MOTION_QUALITY_LINEAR_CAST,
}

enum OverrideMassProperties: char {
	OVERRIDE_MASS_PROPS_CALC_MASS_INERTIA,
	OVERRIDE_MASS_PROPS_CALC_INERTIA,
	OVERRIDE_MASS_PROPS_MASS_INERTIA_PROVIDED,
}

enum GroundState: uint {
	CHARACTER_GROUND_STATE_ON_GROUND,
	CHARACTER_GROUND_STATE_ON_STEEP_GROUND,
	CHARACTER_GROUND_STATE_NOT_SUPPORTED,
	CHARACTER_GROUND_STATE_IN_AIR,
}

enum Activation: const uint {
	ACTIVATION_ACTIVATE      = 0,
	ACTIVATION_DONT_ACTIVATE = 1,
}

enum ValidateResult: uint {
	VALIDATE_RESULT_ACCEPT_ALL_CONTACTS,
	VALIDATE_RESULT_ACCEPT_CONTACT,
	VALIDATE_RESULT_REJECT_CONTACT,
	VALIDATE_RESULT_REJECT_ALL_CONTACTS,
}

typedef BackFaceMode = uint;
const BackFaceMode BACK_FACE_MODE_IGNORE = 0;
const BackFaceMode BACK_FACE_MODE_COLLIDE = 1;

enum BodyType: const char {
	BODY_TYPE_RIGID_BODY = 0,
	BODY_TYPE_SOFT_BODY  = 1,
}

enum AllowedDOFs: const char {
	ALLOWED_DOFS_NONE         = 0b000000,
	ALLOWED_DOFS_ALL          = 0b111111,
	ALLOWED_DOFS_TRANSLATIONX = 0b000001,
	ALLOWED_DOFS_TRANSLATIONY = 0b000010,
	ALLOWED_DOFS_TRANSLATIONZ = 0b000100,
	ALLOWED_DOFS_ROTATIONX    = 0b001000,
	ALLOWED_DOFS_ROTATIONY    = 0b010000,
	ALLOWED_DOFS_ROTATIONZ    = 0b100000,
	ALLOWED_DOFS_PLANE2D      = AllowedDOFs.ALLOWED_DOFS_TRANSLATIONX | AllowedDOFs.ALLOWED_DOFS_TRANSLATIONY | AllowedDOFs.ALLOWED_DOFS_ROTATIONZ,
}


enum Features: const uint {
	FEATURE_DOUBLE_PRECISION = (1 << 0),
	FEATURE_NEON = (1 << 1),
	FEATURE_SSE = (1 << 2),
	FEATURE_SSE4_1 = (1 << 3),
	FEATURE_SSE4_2 = (1 << 4),
	FEATURE_AVX = (1 << 5),
	FEATURE_AVX2 = (1 << 6),
	FEATURE_AVX512 = (1 << 7),
	FEATURE_F16C = (1 << 8),
	FEATURE_LZCNT = (1 << 9),
	FEATURE_TZCNT = (1 << 10),
	FEATURE_FMADD = (1 << 11),
	FEATURE_PLATFORM_DETERMINISTIC = (1 << 12),
	FEATURE_FLOATING_POINT_EXCEPTIONS = (1 << 13),
	FEATURE_DEBUG = (1 << 14),
}


typedef ShapeColor = int;
const ShapeColor SHAPE_COLOR_INSTANCE_COLOR = 0;
const ShapeColor SHAPE_COLOR_SHAPE_TYPE_COLOR = 1;
const ShapeColor SHAPE_COLOR_MOTION_TYPE_COLOR = 2;
const ShapeColor SHAPE_COLOR_SLEEP_COLOR = 3;
const ShapeColor SHAPE_COLOR_ISLAND_COLOR = 4;
const ShapeColor SHAPE_COLOR_MATERIAL_COLOR = 5;


typedef SoftBodyConstraintColor = int;
const SoftBodyConstraintColor SOFT_BODY_CONSTRAINT_COLOR_CONSTRAINT_TYPE = 0;
const SoftBodyConstraintColor SOFT_BODY_CONSTRAINT_COLOR_CONSTRAINT_GROUP = 1;
const SoftBodyConstraintColor SOFT_BODY_CONSTRAINT_COLOR_CONSTRAINT_ORDER = 2;


typedef ActiveEdgeMode = int;
const ActiveEdgeMode ACTIVE_EDGE_MODE_COLLIDE_ONLY_WITH_ACTIVE = 0;
const ActiveEdgeMode ACTIVE_EDGE_MODE_COLLIDE_WITH_ALL = 1;


typedef CollectFacesMode = char;
const CollectFacesMode COLLECT_FACES_MODE_COLLECT_FACES = 0;
const CollectFacesMode COLLECT_FACES_MODE_NO_FACES = 1;

typedef SwingType = char;
const SwingType SWING_TYPE_CONE = 0;
const SwingType SWING_TYPE_PYRAMID = 1;

typedef SixDOFConstraint_Axis = uint;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_TRANSLATION_X = 0;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_TRANSLATION_Y = 1;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_TRANSLATION_Z = 2;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_ROTATION_X = 3;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_ROTATION_Y = 4;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_ROTATION_Z = 5;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_NUM = 6;
const SixDOFConstraint_Axis SIX_DOF_CONSTRAINT_AXIS_NUM_TRANSLATION = SIX_DOF_CONSTRAINT_AXIS_TRANSLATION_Z + 1;

enum SpringMode: const char {
	SPRING_MODE_FREQUENCY_AND_DAMPING = 0,
	SPRING_MODE_STIFFNESS_AND_DAMPING  = 1,
}

enum MotorState: const uint {
	MOTOR_STATE_OFF = 0,
	MOTOR_STATE_VELOCITY = 1,
	MOTOR_STATE_POSITION = 2,
}

